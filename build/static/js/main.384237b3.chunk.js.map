{"version":3,"sources":["components/GiveService.js","components/MapView.js","components/GetService.js","components/Login.js","components/Main.js","components/Profile.js","App.js","index.js"],"names":["GiveService","props","componentDidMount","a","console","log","window","document","cookie","cookieString","cookies","split","setState","u_id","onFileChange","e","images","state","push","target","files","deleteImg","del","value","splice","setShow","show","showSubmit","userName","place_id","service_id","price","contact","description","event","name","this","fetch","method","headers","body","JSON","stringify","st_id","availability","response","json","serviceType","googlePlace","apiKey","inputClassName","onSelect","className","Alert","variant","Button","onClick","onChange","handleInputChange","map","item","key","service","type","class","id","for","index","previewImg","URL","createObjectURL","src","htmlFor","placeholder","rows","handleServiceSubmit","React","Component","MapView","serviceLocations","startLat","startLng","zoom","activeService","services","loc_lat","loc_lng","serviceList","locality","loc_locality","Map","center","TileLayer","url","attribution","Marker","sp_id","position","Popup","onClose","toLocaleString","style","currency","GetService","handleModalShowing","showBooking","handleClick","handleChange","searchLocality","clickedService","userId","time","date","shouldLogin","providersList","length","provider","cookieData","replace","forEach","i","data","trim","decodeURIComponent","userID","book_date","book_time","usDollar","alignItems","marginLeft","service_owner","service_type","alt","handleServiceSelect","Modal","onHide","Header","Title","Body","handleBookSubmit","Login","handleModelSign","showSignup","handleModelLogin","showLogin","handleLogin","redirect","referrerPolicy","email","password","then","catch","err","location","reload","handleSignUp","fullName","handleLogout","history","username","handleRedirectToService","errorMessage","profileimg","cookieArr","displayName","profile_img","exact","path","render","to","Main","handleSearch","filteredService","providerList","providersData","getProviders","handleService","serviceID","isSubmitted","nearbyPlaceId","width","height","viewBox","fill","xmlns","fillRule","d","withRouter","Profile","deleteService","userData","res","profileData","filter","get","bookingData","loc_description","Date","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","hour","minute","App","serviceData","providers","translateCookie","top","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.384237b3.chunk.js","sourcesContent":["import React from 'react';\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { Alert, Button } from 'react-bootstrap';\nimport './giveService.css';\n// import { LengthRequired } from 'http-errors';\n// import axios from \"axios\";\n\nclass GiveService extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userName: \"\",\n            // serviceType: [],\n            u_id: 5,\n            place_id: \"\",\n            service_id: \"1\",\n            price: null,\n            contact: null,\n            description: null,\n            images: [],\n            show: false,\n            showSubmit: false\n        }\n    }\n    componentDidMount = async () => {\n      console.log(\"Cookies are: \" + window.document.cookie);\n      let cookieString = window.document.cookie;\n      if(cookieString) {\n          let cookies = cookieString.split('; ');\n          console.log(\"Logged In\");\n          console.log(cookies);\n          this.setState({u_id: cookies[0].split('=')[1]});\n          // this.setState({userName: decodeURI(cookies[0].split('=')[1])});\n      }\n    }\n\n\n    // getServiceType = async () => {\n    //     const serviceList = await fetch('/services/servicetype');\n    //     const serviceData = await serviceList.json();\n    //     console.log(serviceData);\n    //     this.setState({\n    //         serviceType: serviceData\n    //     })\n    // }\n\n    handleInputChange(event) {\n        const value = event.target.value;\n        const name = event.target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    async handleServiceSubmit(){\n        let response = await fetch(\"/services/add\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                u_id: this.state.u_id,\n                st_id: this.state.service_id,\n                price: this.state.price,\n                description: this.state.description,\n                availability: true,\n                contact: this.state.contact,\n                place_id: this.state.place_id\n            })\n        });\n\n        let json = await response.json()\n        console.log(json);\n        this.setShow();\n        // this.onFileSave();\n    }\n\n    onFileChange = (e) => {\n      const {images} = this.state;\n      images.push(e.target.files[0])\n      this.setState({\n        images: images\n      })\n    }\n\n    deleteImg = (e) => {\n      const del = e.target.value;\n      const images  = this.state.images\n      images.splice(del, 1)\n      this.setState({\n        images : images\n      })\n    }\n    \n    // onFileSave = () => {\n    //   const formData = new FormData();\n    //   //Update the formData Object\n  \n    //   formData.append(`imagefile`, this.state.images[0])\n  \n      // axios\n      //   .post(`/images`, formData, {\n      //     // data: {\n      //     //   u_id: this.state.u_id\n      //     // },\n      //     headers: {\n      //       \"Content-Type\": \"multipart/form-data\",\n      //     },\n      //   })\n      //   .then((res) => console.log(res));\n      // };                                                                                                                                                                                                   \n\n    setShow = () => {\n      this.setState({\n        show: !this.state.show,\n        showSubmit: false\n      })\n      \n    }\n    render() {\n      const { serviceType }  = this.props;\n      const googlePlace = (<GooglePlacesAutocomplete\n      apiKey=\"AIzaSyB8O0QjLaPA4gUeud_KDDtaQH7COiTZ75Y\"\n      inputClassName=\"form-control\"\n      onSelect={({ place_id }) => (this.setState({ place_id: place_id}))}\n      />)\n        return (\n            <div className=\"container align-content-center\">\n                <div className=\"text-center mb-5\"><h1><span className=\"border-bottom border-info\">Become A Do-er Now</span></h1></div>\n                <Alert show={this.state.show} variant=\"success\">\n                    <div className=\"alert-close\">\n                        <p>Thank you!! Your service has been added to our database&nbsp;&nbsp;</p>\n                        <Button variant=\"outline-success\" onClick={() => this.setShow()}>close</Button>\n                    </div>\n                </Alert>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <label>Service Type</label>\n                        <select className=\"custom-select rounded mb-2 mr-sm-2\" name=\"service_id\" onChange={(e) => this.handleInputChange(e)}>\n                            {serviceType.map(item => {\n                                    return <option key={item.st_id} value={item.st_id}>{item.service}</option>\n                                }\n                            )}\n                        </select>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>Location</label>\n                        {googlePlace}\n                        {/* <GooglePlacesAutocomplete\n                            apiKey=\"AIzaSyB8O0QjLaPA4gUeud_KDDtaQH7COiTZ75Y\"\n                            inputClassName=\"form-control\"\n                            onSelect={({ place_id }) => (this.setState({ place_id: place_id}))}\n                        /> */}\n                    </div>\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <label>Price per hour</label>\n                        <input className=\"form-control\" type=\"number\" name=\"price\" onChange={(e) => this.handleInputChange(e)}/>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>Contact Number</label>\n                        <input className=\"form-control\" type=\"tel\" name=\"contact\" onChange={(e) => this.handleInputChange(e)}/>\n                    </div>\n                </div>\n                <div class=\"input-group mb-3\">\n                  <div class=\"custom-file\">\n                    <input type=\"file\" onChange={(e) => {this.onFileChange(e)}}class=\"custom-file-input\" id=\"inputGroupFile02\"/>\n                    <label class=\"custom-file-label\" for=\"inputGroupFile02\">Choose file</label>\n                  </div>\n                  {/* <div class=\"input-group-append\">\n                    <button class=\"input-group-text\" onClick={() => {this.onPreview()}}>Preview</button>\n                  </div> */}\n                </div>\n                    <div className=\"preview-container\">\n                       { this.state.images.map((item, index) => {\n                          const previewImg = URL.createObjectURL(item);\n                            return (\n                              <div className=\"x-button-container\">\n                                <img src={previewImg} key={index} value={index} className=\"upload-img\"/>\n                                <button value={index} className=\"x-button\" onClick={(e)=> this.deleteImg(e)}>X</button>\n                              </div>\n                            )\n                        }) \n                        }\n                    </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"inputAddress\">Description</label>\n                    <textarea className=\"form-control\" name=\"description\" placeholder=\"Give your customers some details about your service\" rows=\"5\" onChange={(e) => this.handleInputChange(e)}/>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={()=>this.handleServiceSubmit()}>Add Service</button>\n            </div>\n        );\n    }\n}\n\nexport default GiveService;\n","import React from 'react';\nimport './mapView.css';\nimport {Map, Marker, TileLayer, Popup} from \"react-leaflet\";\n\n\nclass MapView extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceLocations: [],\n            startLat: 5.577895400000001,\n            startLng: -0.2305186,\n            zoom: 15,\n            activeService: null\n        }\n    }\n\n    componentDidMount() {\n        // this.getServiceLocations();\n        this.setState({\n            startLat: this.props.services[0].loc_lat,\n            startLng: this.props.services[0].loc_lng,\n        })\n    }\n\n    async getServiceLocations(){\n        const serviceList = await fetch(`/services/servicebyidandloc/3/EhhPcmdsZSBSb2FkLCBBY2NyYSwgR2hhbmEiLiosChQKEgn90RfH8ZnfDxFdemNNIEN0gRIUChIJc6e3soSQ3w8R0y0OZdhO0b4`);\n        const services = await serviceList.json();\n        console.log(services);\n        this.setState({serviceLocations: services});\n        this.setState({locality: services[0].loc_locality});\n    }\n\n    render() {\n        const usDollar = {style: \"currency\", currency: \"USD\"}\n        return (\n            <div>\n                <div>\n                    <Map center={[this.state.startLat, this.state.startLng]} zoom={this.state.zoom}>\n                        <TileLayer\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        />\n                        {this.props.services.map(service => (\n                            <Marker\n                                key={service.sp_id}\n                                position={[service.loc_lat, service.loc_lng]}\n                                onClick={() => this.setState({activeService: service})}\n                            />\n                            )\n                        )}\n                        {this.state.activeService && (\n                            <Popup position={[this.state.activeService.loc_lat, this.state.activeService.loc_lng]} onClose={() => this.setState({activeService: null})}>\n                                <div><h5>{this.state.activeService.price.toLocaleString('en-US', usDollar)}</h5></div>\n                            </Popup>\n                        )}\n                    </Map>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MapView;","import React from 'react';\nimport './getService.css'\nimport MapView from \"./MapView\";\n// import Gardening from './icons/Gardening.png'\nimport { Alert, Button, Modal } from 'react-bootstrap';\n\nclass GetService extends React.Component {\n\n  constructor(props) {\n      super(props)\n      this.state = {\n          showBooking: false,\n          show: false,\n          searchLocality: \"\",\n          clickedService: {},\n          userId: 0,\n          time: \"\",\n          date: \"\",\n          shouldLogin: false\n      };\n  }\n  componentDidMount() {\n      if(this.props.providersList.length > 0){\n          this.setState({searchLocality: this.props.providersList[0].loc_locality})\n      }\n\n  }\n\n  handleModalShowing = () => {\n      this.setState({\n          showBooking: !this.state.showBooking\n      });\n  }\n  handleClick = () => {\n    this.setState({\n      showBooking: !this.state.showBooking\n    })\n  }\n  setShow = () => {\n      this.setState({\n          show: !this.state.show,\n          showBooking: false\n      });\n  }\n  handleChange = (e) => {\n      const { name, value } = e.target;\n      this.setState({\n          [name]: value\n      });\n  }\n  handleServiceSelect(provider){\n      this.setState({clickedService: provider});\n      this.setState({\n          showBooking: !this.state.showBooking\n      });\n  }\n  async handleBookSubmit(provider){\n      console.log(provider);\n      let cookieArr = [];\n      let cookieData = {};\n      if(document.cookie){\n          //userID=2; displayName=Naomi\n          //!sometimes userID is missing upon refresh\n          cookieArr = document.cookie.replace(\"'\", \"\").replace(\" \", \"\").split(';');\n\n          cookieArr.forEach((e,i) => {\n              var data = e.split('=')\n              cookieData[data[0].trim()] = decodeURIComponent(data[1]);\n          })\n      }\n      // Route booking to backend\n      let response = await fetch(\"/services/book\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n              u_id: cookieData.userID,\n              sp_id: provider.sp_id,\n              book_date: this.state.date,\n              book_time: this.state.time\n          })\n      });\n\n      let json = await response.json();\n      console.log(json);\n      this.setShow();\n  }\n  render() {\n    const { providersList } = this.props;\n    if(providersList.length < 1){\n           return (\n               <div className=\"text-center\">\n                   <h1>Looks like there are no Do-ers in your area at the moment</h1>\n               </div>\n           )\n       }\n       const usDollar = {\n           style: \"currency\",\n           currency: \"USD\"\n       };\n       \n       return (\n           <div className=\"position-relative overflow-hidden\">\n               <div className=\"text-center mb-5\"><h1><span>Do-ers in {this.state.searchLocality}</span></h1></div>\n               <Alert show={this.state.show} variant=\"success\">\n                   <div className=\"alert-close\" style={{alignItems: 'center'}}>\n                       <p>Your booking request has been sent to the do-er.</p>\n                       <p>{this.state.time} on {this.state.date} is booked.</p>\n                       <Button variant=\"outline-success\" onClick={() => this.setShow()}>close</Button>\n                   </div>\n               </Alert>\n               <Alert show={this.state.shouldLogin} variant=\"danger\">\n                   <div className=\"alert-close\" style={{alignItems: 'center'}}>\n                       <span>Please sign up or login to book.</span>\n                       <Button variant=\"outline-danger\"\n                               onClick={() => this.setState({shouldLogin: false})}>close</Button>\n                   </div>\n               </Alert>\n               <div className=\"row border border-secondary\">\n\n                   <div className=\"col-md-5\">\n                       {providersList.map(data => {\n                           const currency = data.price.toLocaleString('en-US', usDollar)\n                           return (\n                               <div className=\"card\" style={{marginLeft: '30px'}}>\n                                   <div className=\"card-body mb-4\">\n                                       <div className=\"row\">\n                                           <div className=\"media\">\n                                               {/* <img src={data.profile_img} className=\"mr-3\" alt={data.service_owner}/> */}\n                                               <div className=\"media-body\">\n                                                   <h5 className=\"mt-0\">{data.service_owner} <img\n                                                       src={`./icons/${data.service_type}.png`}\n                                                       alt={`${data.service_type} icon`}/></h5>\n                                                   <p>{data.description}</p>\n                                                   <h6>{currency}</h6>\n                                                   <button className=\"btn btn-sm btn-primary\"\n                                                           onClick={() => this.handleServiceSelect(data)}>Book Service\n                                                   </button>\n                                               </div>\n                                           </div>\n                                       </div>\n                                   </div>\n                               </div>\n                           )\n                       })}\n                   </div>\n                   <div className=\"col-md-7\">\n                       <MapView services={this.props.providersList}/>\n                   </div>\n               </div>\n               <Modal show={this.state.showBooking}\n                      onHide={() => this.handleModalShowing()}>\n                   <Modal.Header>\n                       <Modal.Title>Book {this.state.clickedService.service_owner}</Modal.Title>\n                   </Modal.Header>\n                   <Modal.Body>\n                       <div className=\"container\">\n                           <div className=\"form-group\">\n                               <label for=\"date\">Pick a date</label>\n                               <input type=\"date\" onChange={e => {\n                                   this.handleChange(e)\n                               }} className=\"form-control\" id=\"date\" name=\"date\"/>\n                           </div>\n                           <div className=\"form-group\">\n                               <label for=\"time\">Select a time</label>\n                               <input type=\"time\" onChange={e => {\n                                   this.handleChange(e)\n                               }} className=\"form-control\" id=\"time\" name=\"time\"/>\n                           </div>\n                           <div className=\"form-group\">\n                               <Button onClick={() => this.handleBookSubmit(this.state.clickedService)}\n                                       className=\"btn btn-success rounded \">Book Now</Button>\n                           </div>\n                       </div>\n                   </Modal.Body>\n\n               </Modal>\n           </div>\n       );\n  }\n}\n\nexport default GetService;","import React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport './login.css';\nimport {Link, Route} from \"react-router-dom\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showSignup: false,\n      showLogin: false,\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n      username: \"\",\n      profileimg: \"\",\n    };\n  }\n\n  componentDidMount() {\n      let pageCookie = ''\n      let cookieArr = [];\n      let cookieData = {};\n      if(document.cookie){\n          cookieArr = document.cookie.replace(\"'\", \"\").replace(\" \", \"\").split(';');\n          console.log(cookieArr)\n          cookieArr.forEach((e,i) => {\n              var data = e.split('=')\n              cookieData[data[0].trim()] = decodeURIComponent(data[1]);\n          })\n          this.setState({\n            username: cookieData.displayName,\n            // profileimg: cookieData.profile_img\n          })\n          if (cookieData.profile_img !== null) {\n            this.setState({\n              profileimg: cookieData.profile_img\n            })\n          }\n          // console.log(cookieData)\n      }\n  }\n\n  handleModelSign = () => {\n    this.setState({ \n      showSignup: !this.state.showSignup\n    });\n  };\n  handleModelLogin = () => {\n    this.setState({ showLogin: !this.state.showLogin});\n  };\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({[name]: value});\n  }\n\n  handleLogin = async () => {\n     await fetch('/auth/login', {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n        })\n    })\n    .then(response => response.json())\n    .then(json => {\n        console.log(json);\n    })\n    .catch(err => console.log(err));\n  \n    this.handleModelLogin()\n    document.location.reload();\n  }\n\n  handleSignUp = async () => {\n      await fetch('/auth/register', {\n          method: 'POST',\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify({\n              fullName: this.state.fullName,\n              email: this.state.email,\n              password: this.state.password\n          })\n      })\n          .then(response => response.json())\n          .then(json => {\n              console.log(json);\n          })\n          .catch(err => console.log(err));\n      this.handleModelSign();\n      this.handleModelLogin();\n  }\n\n  handleLogout = (history) => {\n      document.cookie = document.cookie + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n      this.setState({\n          username: \"\"\n      })\n      fetch('/auth/logout').then(response => response.json());\n      history.push(\"/\");\n  }\n\n  handleRedirectToService = (history) => {\n      if(this.state.username !== \"\"){\n          history.push(\"/services\");\n      }else{\n          this.handleModelSign();\n      }\n  }\n\n  render() {\n    return (\n      <>\n          {/*TODO try nav bar*/}\n\n          {/*Do-er pathing*/}\n          <li className=\"nav-item mx-1 my-3\">\n              <Route exact path=\"/\" render={({ history}) => (\n                  <Link onClick={() => { this.handleRedirectToService(history) }}>\n                      <p>Become a do-er!</p>\n                  </Link>\n              )} />\n              <Route exact path=\"/profile\" render={({ history}) => (\n                  <Link onClick={() => { this.handleRedirectToService(history) }}>\n                      <p>Become a do-er!</p>\n                  </Link>\n              )} />\n              <Route path=\"/services\" render={({ history }) => (\n                  <Link to={\"/\"}>\n                      <p>Go back to homepage<img src=\"https://img.icons8.com/cotton/64/000000/home--v3.png\" className=\"img-home\"/></p>\n                  </Link>\n                  )}/>\n          </li>\n\n          {/*User logout stuff*/}\n          {this.state.username !== \"\" ? (\n              <>\n                  <li className=\"nav-item mx-2 pt-1\">\n                      <Link to=\"/profile\">\n                      <a className=\"rounded px-3 btn btn-md btn-light\" >{this.state.username}</a>\n                      </Link>\n                  </li>\n                  <Route render={({ history}) => (\n                      <li className=\"nav-item mr-2 pt-1\"><a className=\"rounded px-3 btn btn-md btn-danger\" onClick={() => this.handleLogout(history)}>Log out</a></li>\n                  )} />\n              </>\n\n          ) : (\n              //Sign in & Login\n              <>\n                  <li className=\"nav-item mx-2 pt-1\"><a className=\"rounded px-3 btn btn-md btn-info\" onClick={() => this.handleModelSign()}>Sign Up</a></li>\n                  <li className=\"nav-item mx-2 pt-1\"><a className=\"rounded px-3 btn btn-md btn-info\" onClick={() => this.handleModelLogin()}>Login</a></li>\n              </>\n          )}\n          <Modal show={this.state.showSignup} \n                 onHide={() => this.handleModelSign()}>\n              <Modal.Header>\n                  <Modal.Title>Sign Up</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <div className=\"container\">\n                      <div className=\"form-group\">\n                          <input className=\"form-control\" placeholder=\"Name\" type=\"text\" name=\"fullName\" onChange={(event) => this.handleChange(event)}/>\n                      </div>\n                      <div className=\"form-group\">\n                          <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" onChange={(event) => this.handleChange(event)}/>\n                      </div>\n                      <div className=\"form-group\">\n                          <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={(event) => this.handleChange(event)}/>\n                      </div>\n                      <div className=\"form-group\">\n                          <button className=\"btn btn-success rounded \" onClick={() => {this.handleSignUp()}}>Signup</button>\n                      </div>\n                  </div>\n                  {/* <div className=\"container\">\n                      <div className=\"form-row\">\n                          <div className=\"form-group col-md-6 col-sm-6\">\n                              <a href='http://localhost:5000/auth/facebook' className=\"btn btn-md btn-primary rounded\"><i className=\"fab fa-facebook-f\"></i>&nbsp;&nbsp;Sign up with Facebook</a>\n                          </div>\n                          <div className=\"form-group col-md-6 col-sm-6\">\n                              <a href='http://localhost:5000/auth/google' className=\"btn btn-md btn-danger rounded\"><i className=\"fa fa-google\"></i>&nbsp;&nbsp;Sign up with Google</a>\n                          </div>\n                      </div>\n                  </div> */}\n              </Modal.Body>\n         </Modal> \n\n         <Modal show={this.state.showLogin} onHide={() => this.handleModelLogin()}>\n             <Modal.Header>\n                 <Modal.Title>Login</Modal.Title>\n             </Modal.Header>\n             <Modal.Body>\n                 <div className=\"container\">\n                     <div className=\"input-group mb-2\">\n                         <div className=\"input-group-prepend\">\n                             <div className=\"input-group-text\"><span className=\"fa fa-user\"></span></div>\n                         </div>\n                         <input type=\"text\" className=\"form-control\" placeholder=\"email\" name=\"email\" onChange={(event) => this.handleChange(event)}/>\n                     </div>\n                     <div className=\"input-group mb-2\">\n                         <div className=\"input-group-prepend\">\n                             <div className=\"input-group-text\"><span className=\"fa fa-lock\"></span></div>\n                         </div>\n                         <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={(event) => this.handleChange(event)}/>\n                     </div>\n                     <div className=\"form-group\">\n                         <button className=\"btn btn-md btn-success rounded\" onClick={() => {this.handleLogin()}}>Login</button>\n                     </div>\n                     {/* <div className=\"form-row\">\n                         <div className=\"form-group col-md-6 col-sm-6\">\n                             <a href='http://localhost:5000/auth/facebook' className=\"btn btn-md btn-primary rounded\"><i className=\"fab fa-facebook-f\"></i> Login with Facebook</a>\n                         </div>\n                         <div className=\"form-group col-md-6 col-sm-6\">\n                             <a href='http://localhost:5000/auth/google' className=\"btn btn-md btn-danger rounded\"><i className=\"fa fa-google\"></i> Login with Google</a>\n                         </div>\n                     </div> */}\n                 </div>\n             </Modal.Body>\n         </Modal>\n      </>\n    );\n  }\n}\n\n","import React from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport 'react-google-places-autocomplete/dist/index.min.css';\nimport './main.css';\nimport { withRouter } from \"react-router-dom\";\nconst GOOGLE_API_KEY = process.env.REACT_APP_PLACE_API_KEY;\n   // \"react-responsive-modal\": \"^5.0.2\",\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props) \n    this.state = {\n      // serviceType: [],\n      filteredService: \"\",\n      isSubmitted: \"\",\n      locality: \"\",\n      nearbyPlaceId: \"\",\n      reload: false\n    }\n  }\n  \n  handleSearch = async () => {\n    const providerList = await fetch (`/services/servicebyidandloc/${this.state.filteredService}/${this.state.locality}`);\n    const providersData = await providerList.json();\n    this.props.getProviders(providersData);\n    this.props.history.push('/getService');\n  }\n\n  handleService = (e) => {\n    console.log(e.target)\n    const serviceID = e.target.value;\n    this.setState({\n        filteredService: serviceID\n    })\n  } \n  // getLocation = () => {\n  //   if (navigator.geolocation) {\n  //       navigator.geolocation.getCurrentPosition(this.showPosition);\n  //   } else {\n  //     console.log(\"Geolocation is not supported by this browser.\");\n  //   } \n  //   }\n\n  // showPosition = (position) => {\n  //   const { latitude, longitude } = position.coords;\n  //   fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${GOOGLE_API_KEY}`)\n  //   .then(response =>  response.json()) \n  //   .then(data => {\n  //     console.log(data.results[0])\n  //     const placeId = data.results[0].place_id;\n  //     console.log(placeId)\n  //     this.setState({\n  //      nearbyPlaceId: placeId\n  //     })\n  //   }) \n  //   this.nearbySearch()\n  //   }\n\n  //   nearbySearch = async () => {\n  //     const nearbyProviders = await fetch (`/services`);\n  //     const nearbyData = await nearbyProviders.json();\n  //     this.props.nearbyProviders(nearbyData)\n  //     this.props.history.push('/getService')\n  //   }\n    render() {\n      const { serviceType }  = this.props;\n      const googlePlace = (<GooglePlacesAutocomplete\n      apiKey={'AIzaSyB8O0QjLaPA4gUeud_KDDtaQH7COiTZ75Y'}\n      inputClassName=\"form-control rounded mb-2 mr-sm-2\"\n      onSelect={({ place_id }) => (\n        \n        this.setState({ locality : place_id})\n      )}\n      \n  />)\n        return (\n            <div className=\"main-section position-relative overflow-hidden p-3 p-md-5 m-md-3\">\n                <div className=\"container d-flex flex-column\">\n                    <div className=\"row my-auto\">\n                        <div className=\"col-lg-5 col-md-12 col-sm-12 pt-16 pt-lg-6 my-auto\">\n                            <h1 className=\"display-4 mb-2\">Need help ?</h1>\n                            <h4 className=\"mb-2\">Let someone give you a hand for a price</h4>\n                            <p className=\"lead\">\n                                Get It Done connects you to people around you willing to help with your chores ('Do-ers'). For the right price, of course.\n                            </p>\n                            <p>Find a Do-er now</p>\n                            <div>\n                                <div className=\"input-group mb-3\">\n                                    {googlePlace}\n                                    <select className=\"custom-select rounded mb-2 mr-sm-2\" onChange={this.handleService}>\n                                      {serviceType.map(item => {\n                                        return <option key={item.st_id} value={item.st_id}>{item.service}</option>\n                                      }\n                                      )}\n                                    </select>\n                                    <button className=\"btn btn-outline-success mb-2 btn-search\" onClick={this.handleSearch}>\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search\"\n                                             fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\"\n                                                  d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\n                                            <path fillRule=\"evenodd\"\n                                                  d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\n                                        </svg>\n                                        &nbsp;&nbsp;Search\n                                    </button>\n                                    {/* <button className=\"btn btn-outline-success mb-2 btn-search\">\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search\"\n                                             fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fillRule=\"evenodd\"\n                                                  d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\n                                            <path fillRule=\"evenodd\"\n                                                  d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\n                                        </svg>\n                                        &nbsp;&nbsp;Search Nearby\n                                    </button> */}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6 col-md-12 col-sm-12 ml-auto my-auto\">\n                            <img className=\"w-auto\" alt=\"Illustration\" src=\"./images/bg_01.svg\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(Main);\n","import React, {Component} from 'react';\nimport './profile.css';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            profileData: [],\n            bookingData: [],\n            userData: this.props.cookieData\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.state.userData)\n\n        fetch(`/users/services/${this.state.userData.userID}`)\n            .then(response => response.json())\n            .then(json => {\n                console.log(json)\n                this.setState({profileData: json})\n            })\n\n        fetch(`/services/booking-history/${this.state.userData.userID}`)\n            .then(response => response.json())\n            .then(json => {\n                console.log(json)\n                this.setState({bookingData: json})\n            })\n\n    }\n    deleteService = id => {\n        fetch(`/users/services/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                u_id: this.state.userData.userID,\n            })\n    \n        })\n            .then(res => res.json())\n            .then(json => this.setState({\n              profileData: this.state.profileData.filter(data => data.sp_id !== id)})\n            );\n    };\n\n    get = async () => {\n        // const profileData = await fetch (`/services/${this.translateCookie().userID}`);\n        const profileData = await fetch(`/services/${this.state.userData.userID}`);\n        console.log(profileData)\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"container text-center\">\n                    {/* <img src={this.state.userData.profile_img} className=\"img-fluid mb-2\"/>\n                    TODO Being able to update image */}\n                    <h3>Welcome back, {this.state.userData.displayName}!</h3>\n                </div>\n                <span>\n                <div className=\"col-5 float-left\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            Services you're providing\n                        </div>\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item\">\n                                <div className=\"col\">\n                                    <div className=\"card border-light\">\n                                        {this.state.profileData.map((e, i) => {\n                                            return (\n                                                <div className=\"card\">\n                                                    <h5 className=\"card-header btn-info d-flex justify-content-between\">{e.service}\n                                                    <span>\n                                                          <button\n                                                              className=\"btn btn-danger-sm\"\n                                                              onClick={() => this.deleteService(e.sp_id)}>\n                                                            X\n                                                          </button>\n                                                    </span>\n                                                    </h5>\n\n                                                    <div className=\"card-body\">\n                                                        {/*<p className=\"card-title\">Service Description</p>*/}\n                                                        <p className=\"card-text\">{e.description}</p>\n                                                        <p className=\"card-text\">{e.loc_description}</p>\n                                                        <p className=\"card-text text-right\">${e.price}/hour</p>\n\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"col-5 float-right\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            Services you booked\n                        </div>\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item\">\n                                <div className=\"col\">\n                                    <div className=\"card border-light\">\n                                        {this.state.bookingData.map((e, i) => {\n                                            let date = new Date(e.book_date).toLocaleDateString(('en-GB'), {weekday:'long',year: 'numeric', month: 'numeric', day: 'numeric'})\n                                            date = date.replace(/\\//g,\".\")\n                                            // date = date.split(\"/\").join(\".\")\n                                            // let date = new Date(e.book_date).toLocaleDateString('ko-KR')\n                                            // date = date.slice(0, date.length - 1)\n                                            return (\n                                                <div className=\"card\">\n                                                    <h5 className=\"card-header btn-info\">{e.service}</h5>\n                                                    <div className=\"card-body\">\n                                                        <p className=\"card-text\">{e.description}</p>\n                                                        <p className=\"card-text\">{date} @\n                                                            <span className=\"card-text\">{new Date(e.book_date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                                                        </span>\n                                                        </p>\n                                                        <p className=\"card-title\">{e.loc_description}</p>\n                                                        <p className=\"card-text text-right\">${e.price}/hour</p>\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                    </span>\n                {/*    end div*/}\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport './App.css';\nimport GiveService from \"./components/GiveService\";\nimport GetService from './components/GetService';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport MapView from \"./components/MapView\";\nimport Profile from \"./components/Profile\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { BrowserRouter as Router, Redirect, Route, Link, NavLink } from \"react-router-dom\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      providers: [],\n      serviceType: []\n    }\n  };\n\n  componentDidMount = async () => {\n    console.log(\"arrived\")\n    const serviceList = await fetch('/services/servicetype');\n    const serviceData = await serviceList.json();\n    console.log(serviceData)\n    this.setState({\n      serviceType: serviceData\n    })\n  }\n  getProviders = (providersData) => {\n    this.setState({\n      providers: providersData\n    })\n  }\n  // nearbyProviders = (nearbyData) => {\n  //   this.setState({\n  //     providers: nearbyData\n  //   })\n  // }\n  //repeated function?\n    translateCookie = () => {\n        let cookieArr = [];\n        let cookieData = {};\n        if(document.cookie){\n            //userID=2; displayName=Naomi\n            //!sometimes userID is missing upon refresh\n            cookieArr = document.cookie.replace(\"'\", \"\").replace(\" \", \"\").split(';');\n\n            cookieArr.forEach((e,i) => {\n                var data = e.split('=')\n                cookieData[data[0].trim()] = decodeURIComponent(data[1]);\n            })\n\n            return cookieData\n        }else{\n            return false;\n        }\n    }\n\n  render() {\n      return (\n          <div className=\"app\">\n              <Router>\n                  <nav className=\"py-3 navbar navbar-expand-lg absolute-top navbar-light\" style={{top: 0}}>\n                      <div className=\"container\">\n                          {/*<Link className=\"navbar-brand d-flex fixed-top\" style={{left: 400, top:11}} to=\"/\"><span></span><img src=\"./images/logo.png\"/></Link>*/}\n                          <Link className=\"navbar-brand d-flex\" to=\"/\"><span></span><img src=\"./images/logo.png\"/></Link>\n                          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                                  data-target=\"#navbar-content\" aria-controls=\"navbar-content\" aria-expanded=\"false\"\n                                  aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span>\n                          </button>\n                          <div className=\"collapse navbar-collapse\" id=\"navbar-content\">\n                              <ul className=\"navbar-nav ml-auto\">\n                                  <Login cookieData={this.translateCookie()}/>\n                              </ul>\n                          </div>\n                      </div>\n                      </nav>\n                  <Route exact path=\"/\">\n                      <Main serviceType={this.state.serviceType} \n                            getProviders={(providersData) => this.getProviders(providersData)}\n                            // nearbyProviders={(nearbyData) => this.nearbyProviders(nearbyData)}\n                            />\n                  </Route>\n                  <Route exact path=\"/getService\">\n                      <GetService providersList={this.state.providers} />\n                  </Route>\n                  <Route exact path=\"/services\">\n                      <GiveService serviceType={this.state.serviceType}/>\n                  </Route>\n                  <Route exact path=\"/map\">\n                      <MapView />\n                  </Route>\n                  <Route exact path=\"/profile\">\n                      <Profile cookieData={this.translateCookie()}/>\n                  </Route>\n              </Router>\n          </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}